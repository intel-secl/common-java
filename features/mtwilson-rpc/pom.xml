<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.intel.mtwilson.services</groupId>
    <artifactId>mtwilson-rpc</artifactId>
    
    <packaging>jar</packaging>
    <name>mtwilson-core-rpc</name>
    
    <parent>
        <groupId>com.intel.mtwilson</groupId>
        <artifactId>mtwilson-maven-build-coreutil-features</artifactId>
        <version>5.0-SNAPSHOT</version>
    </parent>
    
    <properties />
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    
    <dependencies>
        <dependency>
            <groupId>com.intel.mtwilson.services</groupId>
            <artifactId>mtwilson-repository-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.intel.mtwilson.services</groupId>
            <artifactId>mtwilson-rpc-model</artifactId>
        </dependency>
        <dependency>
            <groupId>com.intel.mtwilson.services</groupId>
            <artifactId>mtwilson-rpc-jdbi</artifactId>
        </dependency>
        <dependency>
            <groupId>com.intel.mtwilson.integration</groupId>
            <artifactId>mtwilson-launcher-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.intel.mtwilson.util</groupId>
            <artifactId>mtwilson-util-collection</artifactId>
        </dependency>
        <!-- required for javax.ws.rs.QueryParam in RpcFilterCriteria and javax.ws.rs.Path in Rpcs resource -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- required for javax.ejb.Stateless in Rpcs resource -->
        <!--
        <dependency>
            <groupId>javax.ejb</groupId>
            <artifactId>javax.ejb-api</artifactId>
            <version>3.2</version>
            <scope>provided</scope>
        </dependency>
        -->
        <!--
        <dependency>
            <groupId>com.intel.mtwilson.integration</groupId>
            <artifactId>mtwilson-my</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.intel.mtwilson.integration</groupId>
            <artifactId>mtwilson-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        -->
        <!--
        deprecated: please consult core/util roadmap for replacement plan
        <dependency>
            <groupId>com.intel.mtwilson.integration</groupId>
            <artifactId>mtwilson-env</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        -->
        <!--
        <dependency>
            <groupId>com.intel.mtwilson.services</groupId>
            <artifactId>mtwilson-jaxrs-util</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.intel.mtwilson.util</groupId>
            <artifactId>mtwilson-util-jaxrs2</artifactId>
            <version>${project.version}</version>
        </dependency>
        -->
        <dependency>
            <groupId>com.intel.mtwilson.util</groupId>
            <artifactId>mtwilson-util-crypto</artifactId>
        </dependency>
        <dependency>
            <groupId>com.intel.mtwilson.util</groupId>
            <artifactId>mtwilson-util-extensions</artifactId>
        </dependency>
        <dependency>
            <groupId>com.intel.mtwilson.util</groupId>
            <artifactId>mtwilson-util-jaxrs2-server</artifactId>
        </dependency>
        <dependency>
            <groupId>com.intel.mtwilson.util</groupId>
            <artifactId>mtwilson-util-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>com.intel.mtwilson.util</groupId>
            <artifactId>mtwilson-util-io</artifactId>
        </dependency>
        <dependency>
            <groupId>com.intel.mtwilson.util</groupId>
            <artifactId>mtwilson-util-rfc822</artifactId>
        </dependency>
        <dependency>
            <groupId>com.intel.mtwilson.util</groupId>
            <artifactId>mtwilson-util-performance</artifactId>
        </dependency>
        <!--
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>mtwilson-attestation-jpa</artifactId>
            <version>${project.version}</version>
        </dependency>        
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>mtwilson-management-jpa</artifactId>
            <version>${project.version}</version>
        </dependency>
        -->
        <dependency>
            <groupId>com.intel.mtwilson.util</groupId>
            <artifactId>mtwilson-util-patch</artifactId>
        </dependency>
        
        <!-- java object serialization for the mw_rpc table; we use xstream which depends on xpp3 which depends on xmlpull -->
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
        </dependency>
        <!--
        <dependency>
            <groupId>xpp3</groupId>
            <artifactId>xpp3</artifactId>
            <version>1.1.4c</version> 
        </dependency>
        <dependency>
            <groupId>xmlpull</groupId>
            <artifactId>xmlpull</artifactId>
            <version>1.1.3.1</version> 
        </dependency>
        -->
        
        <!-- we use the httpclient for parsing accept headers etc because
        they have a public api for it, while jersey's parsing api is
        internal -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
        
        <!-- required for MessageBodyWorkers used in AsyncRpc,
            but marked as provided because inclusion of Jersey
            jars is webserver dependent; Glassfish4 already has
            them and complains if we provide our own, while Jetty9
            does not have them; therefore the launcher for each
            environment will ensure the right jar files are present
        -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
</project>
